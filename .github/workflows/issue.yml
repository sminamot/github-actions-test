name: issue-test

on:
  issues:
    types: edited

jobs:
  comment:
    runs-on: ubuntu-latest
    steps:
    - name: Find Comment
      uses: peter-evans/find-comment@v3
      id: fc
      with:
        issue-number: ${{ github.event.issue.number }}
        comment-author: 'github-actions[bot]'

    #- name: Create comment(OK)
    #  if: steps.fc.outputs.comment-id == '' && github.event.issue.body == 'OK'
    #  uses: peter-evans/create-or-update-comment@v4
    #  with:
    #    issue-number: ${{ github.event.issue.number }}
    #    body: All OK

    - name: Create comment(NG)
      if: steps.fc.outputs.comment-id == '' && github.event.issue.body != 'OK'
      uses: peter-evans/create-or-update-comment@v4
      with:
        issue-number: ${{ github.event.issue.number }}
        body: ${{ github.event.issue.body }}

    - name: Update comment(NG)
      if: steps.fc.outputs.comment-id != '' && github.event.issue.body != 'OK'
      uses: peter-evans/create-or-update-comment@v4
      with:
        comment-id: ${{ steps.fc.outputs.comment-id }}
        body: ${{ github.event.issue.body }}
        edit-mode: replace

    - name: Delete comment
      if: ${{ steps.fc.outputs.comment-id != '' && github.event.issue.comment-body == 'OK' $}}
      uses: actions/github-script@v7
      with:
        script: |
          github.rest.issues.deleteComment({
            owner: context.repo.owner,
            repo: context.repo.repo,
            comment_id: ${{ steps.fc.outputs.comment-id }},
          })

    #- name: Update comment(NG)
    #  if: steps.fc.outputs.comment-id != '' && github.event.issue.body != 'OK'
    #  uses: peter-evans/create-or-update-comment@v4
    #  with:
    #    comment-id: ${{ steps.fc.outputs.comment-id }}
    #    body: ${{ github.event.issue.body }}
    #    edit-mode: replace
